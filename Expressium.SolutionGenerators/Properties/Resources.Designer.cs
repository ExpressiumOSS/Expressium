//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Expressium.SolutionGenerators.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Expressium.SolutionGenerators.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using NUnit.Framework;
        ///
        ///[assembly: Parallelizable(ParallelScope.Fixtures)]
        ///[assembly: LevelOfParallelism(4)].
        /// </summary>
        internal static string AssemblyInfoCSharp {
            get {
                return ResourceManager.GetString("AssemblyInfoCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using log4net;
        ///using NUnit.Framework;
        ///using System;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests
        ///{
        ///    public class Asserts
        ///    {
        ///        private readonly ILog logger;
        ///
        ///        public Asserts(ILog logger)
        ///        {
        ///            this.logger = logger;
        ///        }
        ///
        ///        public void EqualTo(object actual, object expected, string message)
        ///        {
        ///            try
        ///            {
        ///                Assert.That(actual, Is.EqualTo(expected), message);
        ///
        ///                logger.InfoFormat(&quot;{0}&quot;, m [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AssertsCSharp {
            get {
                return ResourceManager.GetString("AssertsCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package Bases;
        ///
        ///import org.apache.log4j.Logger;
        ///import org.testng.Assert;
        ///
        ///public class Asserts {
        ///    private static Logger logger = Logger.getLogger(Asserts.class);
        ///
        ///    public static void assertEquals(String expected, String actual, String message) {
        ///        try {
        ///            Assert.assertEquals(expected, actual, message);
        ///
        ///            logger.info(String.format(&quot;%s&quot;, message));
        ///            logger.info(String.format(&quot;Expected to be [%s] and was [%s] - PASSED&quot;, expected, actual));
        ///        } ca [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AssertsJava {
            get {
                return ResourceManager.GetString("AssertsJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BoDi;
        ///using System.IO;
        ///using System.Text.RegularExpressions;
        ///using TechTalk.SpecFlow;
        ///using TechTalk.SpecFlow.Infrastructure;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests
        ///{
        ///    [Binding]
        ///    public class BaseHooks : BaseTest
        ///    {
        ///        private readonly FeatureContext featureContext;
        ///        private readonly ScenarioContext scenarioContext;
        ///        private readonly ISpecFlowOutputHelper specFlowOutputHelper;
        ///        private readonly IObjectContainer objectContainer;
        ///
        ///        priv [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseHooksCSharp {
            get {
                return ResourceManager.GetString("BaseHooksCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Reqnroll;
        ///using Reqnroll.BoDi;
        ///using System.IO;
        ///using System.Text.RegularExpressions;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests
        ///{
        ///    [Binding]
        ///    public class BaseHooks : BaseTest
        ///    {
        ///        private readonly FeatureContext featureContext;
        ///        private readonly ScenarioContext scenarioContext;
        ///        private readonly IReqnrollOutputHelper reqnrollOutputHelper;
        ///        private readonly IObjectContainer objectContainer;
        ///
        ///        private ContextController contextController;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseHooksReqnRollCSharp {
            get {
                return ResourceManager.GetString("BaseHooksReqnRollCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using log4net;
        ///using OpenQA.Selenium;
        ///using OpenQA.Selenium.Support.UI;
        ///using SeleniumExtras.PageObjects;
        ///using SeleniumExtras.WaitHelpers;
        ///using System;
        ///using System.Threading;
        ///
        ///namespace CompanyName.ProjectName.Web.API
        ///{
        ///    public class BasePage
        ///    {
        ///        protected ILog logger;
        ///        protected IWebDriver driver;
        ///
        ///        public static int PageTimeOut { get; set; }
        ///
        ///        public static By PageSpinnerLocator { get; set; }
        ///        public static int PageSpinnerInitialTimeOut { get;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BasePageCSharp {
            get {
                return ResourceManager.GetString("BasePageCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package Bases;
        ///
        ///import org.apache.log4j.Logger;
        ///import org.openqa.selenium.*;
        ///import org.openqa.selenium.support.PageFactory;
        ///import org.openqa.selenium.support.pagefactory.AjaxElementLocatorFactory;
        ///import org.openqa.selenium.support.ui.ExpectedCondition;
        ///import org.openqa.selenium.support.ui.ExpectedConditions;
        ///import org.openqa.selenium.support.ui.WebDriverWait;
        ///
        ///import java.time.Duration;
        ///import java.util.ArrayList;
        ///
        ///public class BasePage {
        ///    protected static Logger logger = Logger.getLo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BasePageJava {
            get {
                return ResourceManager.GetString("BasePageJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using log4net;
        ///using RestSharp;
        ///using RestSharp.Authenticators;
        ///using System;
        ///using System.Diagnostics;
        ///using System.Net;
        ///
        ///namespace CompanyName.ProjectName.Web.API
        ///{
        ///    public class BaseService
        ///    {
        ///        protected ILog logger;
        ///
        ///        protected string username;
        ///        protected string password;
        ///
        ///        public string RequestUrl { get; private set; }
        ///        public string RequestMethod { get; private set; }
        ///        public string ResponseStatusCode { get; private set; }
        ///        publ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseServiceCSharp {
            get {
                return ResourceManager.GetString("BaseServiceCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using log4net;
        ///using OpenQA.Selenium;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests.BusinessTests.Steps
        ///{
        ///    public class BaseSteps
        ///    {
        ///        protected Configuration configuration;
        ///        protected ILog logger;
        ///        protected IWebDriver driver;
        ///        protected Asserts Asserts;
        ///
        ///        public BaseSteps(ContextController contextController)
        ///        {
        ///            configuration = contextController.Configuration;
        ///            logger = contextController.Logger;
        ///            Asserts = c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseStepsCSharp {
            get {
                return ResourceManager.GetString("BaseStepsCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package BusinessTests.Steps;
        ///
        ///import org.openqa.selenium.WebDriver;
        ///
        ///public class BaseSteps {
        ///    protected static WebDriver driver;
        ///
        ///    public static void initialize(WebDriver driver) {
        ///        BaseSteps.driver = driver;
        ///    }
        ///}.
        /// </summary>
        internal static string BaseStepsJava {
            get {
                return ResourceManager.GetString("BaseStepsJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using log4net;
        ///using OpenQA.Selenium;
        ///using System;
        ///using System.Linq;
        ///
        ///namespace CompanyName.ProjectName.Web.API
        ///{
        ///    public class BaseTable : BasePage
        ///    {
        ///        protected By baseLocator;
        ///
        ///        public BaseTable(ILog logger, IWebDriver driver, By baseLocator) : base(logger, driver)
        ///        {
        ///            this.logger = logger;
        ///            this.driver = driver;
        ///            this.baseLocator = baseLocator;
        ///        }
        ///
        ///        public virtual int GetNumberOfRows()
        ///        {
        ///            l [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseTableCSharp {
            get {
                return ResourceManager.GetString("BaseTableCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using NUnit.Framework;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests
        ///{
        ///    public class BaseTest : BaseTestFixture
        ///    {
        ///        [OneTimeSetUp]
        ///        protected void InitializeTestcase()
        ///        {
        ///            logger.InfoFormat(&quot;// Initialize Testcase&quot;);
        ///        }
        ///
        ///        public void InitializeBrowserWithLogin()
        ///        {
        ///            InitializeBrowser();
        ///
        ///            // TODO - Implement potential missing login sequence...
        ///
        ///            // var loginPage = new LoginPage(logger, driver);
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseTestCSharp {
            get {
                return ResourceManager.GetString("BaseTestCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package BusinessTests.Steps;
        ///
        ///import Bases.BaseTest;
        ///import Bases.BaseTestFixture;
        ///import Bases.Logger;
        ///import io.cucumber.core.backend.TestCaseState;
        ///import io.cucumber.java.After;
        ///import io.cucumber.java.Before;
        ///import io.cucumber.java.Scenario;
        ///import org.apache.commons.lang3.reflect.FieldUtils;
        ///import org.apache.commons.lang3.reflect.MethodUtils;
        ///
        ///import java.io.File;
        ///import java.lang.reflect.Field;
        ///import java.lang.reflect.Method;
        ///import java.time.LocalDateTime;
        ///import java.time.format. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseTestFixtureBDDJava {
            get {
                return ResourceManager.GetString("BaseTestFixtureBDDJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using log4net;
        ///using NUnit.Framework;
        ///using NUnit.Framework.Interfaces;
        ///using OpenQA.Selenium;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///using System.Linq;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests
        ///{
        ///    public class BaseTestFixture
        ///    {
        ///        protected readonly Configuration configuration;
        ///
        ///        protected ILog logger;
        ///        protected Asserts Asserts;
        ///        protected IWebDriver driver;
        ///
        ///        public BaseTestFixture()
        ///        {
        ///            config [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseTestFixtureCSharp {
            get {
                return ResourceManager.GetString("BaseTestFixtureCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package Bases;
        ///
        ///import org.apache.commons.io.FileUtils;
        ///import org.openqa.selenium.JavascriptExecutor;
        ///import org.openqa.selenium.OutputType;
        ///import org.openqa.selenium.TakesScreenshot;
        ///import org.openqa.selenium.WebDriver;
        ///import org.testng.ITestContext;
        ///import org.testng.ITestNGMethod;
        ///import org.testng.annotations.AfterClass;
        ///import org.testng.annotations.BeforeClass;
        ///
        ///import java.io.File;
        ///import java.time.LocalDateTime;
        ///import java.time.format.DateTimeFormatter;
        ///
        ///public class BaseTestFix [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseTestFixtureJava {
            get {
                return ResourceManager.GetString("BaseTestFixtureJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package Bases;
        ///
        ///public class BaseTest extends BaseTestFixture {
        ///    public enum EnvironmentTypes {
        ///        DEV,
        ///        TEST,
        ///        PROD
        ///    }
        ///
        ///    public BaseTest() {
        ///        company = &quot;CompanyName&quot;;
        ///        project = &quot;ProjectName&quot;;
        ///        environmentId = EnvironmentTypes.TEST.toString();
        ///        url = &quot;ApplicationUrl&quot;;
        ///        logging = true;
        ///        loggingPath = &quot;C:\\Temp\\CompanyName\\ProjectName\\TestResults&quot;;
        ///        browser = WebDrivers.BrowserTypes.Chrome.toString();
        ///        max [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseTestJava {
            get {
                return ResourceManager.GetString("BaseTestJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;!DOCTYPE suite SYSTEM &quot;http://testng.org/testng-1.0.dtd&quot;&gt;
        ///&lt;suite name=&quot;BusinessTests&quot; configfailurepolicy=&quot;continue&quot;&gt;
        ///    &lt;test name=&quot;BusinessTests&quot;&gt;
        ///        &lt;classes&gt;
        ///            &lt;class name=&quot;BusinessTests.TestRunners.BusinessTests&quot;&gt;&lt;/class&gt;
        ///        &lt;/classes&gt;
        ///    &lt;/test&gt;
        ///&lt;/suite&gt;.
        /// </summary>
        internal static string BddTestsJava {
            get {
                return ResourceManager.GetString("BddTestsJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.Extensions.Configuration;
        ///using System;
        ///using System.IO;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests
        ///{
        ///    public class Configuration
        ///    {
        ///        public enum Profiles
        ///        {
        ///            Development,
        ///            Test,
        ///            PreProduction,
        ///            Production
        ///        }
        ///
        ///        public string Company { get; set; }
        ///        public string Project { get; set; }
        ///        public string Environment { get; set; }
        ///        public string Url { get; set; }
        ///        publ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConfigurationCSharp {
            get {
                return ResourceManager.GetString("ConfigurationCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Profiles&quot;: {
        ///    &quot;Development&quot;: {
        ///      &quot;Company&quot;: &quot;CompanyName&quot;,
        ///      &quot;Project&quot;: &quot;ProjectName&quot;,
        ///      &quot;Environment&quot;: &quot;Development&quot;,
        ///      &quot;Url&quot;: &quot;ApplicationUrl&quot;,
        ///      &quot;Username&quot;: &quot;john.doe@microsoft.com&quot;,
        ///      &quot;Password&quot;: &quot;1234567890&quot;,
        ///      &quot;Logging&quot;: true,
        ///      &quot;LoggingPath&quot;: &quot;.\\TestResults&quot;,
        ///      &quot;BrowserType&quot;: &quot;BrowserType&quot;,
        ///      &quot;Maximize&quot;: true,
        ///      &quot;Headless&quot;: false,
        ///      &quot;WindowSize&quot;: false,
        ///      &quot;WindowWidth&quot;: 1920,
        ///      &quot;WindowHeight&quot;: 1080,
        ///      &quot;Highlight&quot;: t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConfigurationTestsCSharp {
            get {
                return ResourceManager.GetString("ConfigurationTestsCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using log4net;
        ///using OpenQA.Selenium;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests
        ///{
        ///    public class ContextController
        ///    {
        ///        public Configuration Configuration { get; set; }
        ///        public ILog Logger { get; set; }
        ///        public IWebDriver Driver { get; set; }
        ///        public Asserts Asserts {  get; set; }
        ///    }
        ///}.
        /// </summary>
        internal static string ContextControllerCSharp {
            get {
                return ResourceManager.GetString("ContextControllerCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature: Login
        ///	As a User
        ///	I want to login on the web application
        ///	So that I can administrate my product orders
        ///
        ///@BusinessTests @Id:TC200??
        ///Scenario: Successful User Login with Valid Credentials
        ///	Given I am logged in with valid user credentials
        ///	Then I should be redirected to the Home page.
        /// </summary>
        internal static string FeatureCSharp {
            get {
                return ResourceManager.GetString("FeatureCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature: Login
        ///	As a User
        ///	I want to login on the web application
        ///	So that I can administrate my product orders
        ///
        ///@BusinessTests @Id:TC200??
        ///Scenario: Successful User Login with Valid Credentials
        ///	Given I am logged in with valid user credentials
        ///	Then I should be redirected to the Home page.
        /// </summary>
        internal static string FeatureJava {
            get {
                return ResourceManager.GetString("FeatureJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to echo Runnning LivingDoc Documentation...
        ///
        ///cd .\CompanyName.ProjectName.Web.API.Tests\bin\Debug\net6.0
        ///
        ///livingdoc test-assembly CompanyName.ProjectName.Web.API.Tests.dll -t TestExecution.json
        ///
        ///mkdir TestResults
        ///
        ///move LivingDoc.html .\TestResults\LivingDoc.html
        ///
        ///start .\TestResults\LivingDoc.html.
        /// </summary>
        internal static string LivingDocCSharp {
            get {
                return ResourceManager.GetString("LivingDocCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using log4net;
        ///using log4net.Appender;
        ///using log4net.Config;
        ///using log4net.Core;
        ///using log4net.Layout;
        ///
        ///namespace CompanyName.ProjectName.Web.API
        ///{
        ///    public class Logger
        ///    {
        ///        public static ILog Initialize(string name, string filePath = null)
        ///        {
        ///            var repository = LoggerManager.CreateRepository(name);
        ///
        ///            var patternLayout = new PatternLayout();
        ///            patternLayout.ConversionPattern = &quot;%date{HH:mm:ss} %level %type # %message%newline&quot;;
        ///            pat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LoggerCSharp {
            get {
                return ResourceManager.GetString("LoggerCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package Bases;
        ///
        ///import org.apache.log4j.*;
        ///
        ///public class Logger {
        ///    public static void initialize(String filePath) {
        ///        Hierarchy hierarchy = (Hierarchy) LogManager.getLoggerRepository();
        ///
        ///        PatternLayout patternLayout = new PatternLayout();
        ///        patternLayout.setConversionPattern(&quot;%d{HH:mm:ss} %p %C # %m%n&quot;);
        ///        patternLayout.activateOptions();
        ///
        ///        ConsoleAppender console = new ConsoleAppender();
        ///        console.setLayout(patternLayout);
        ///        console.setThreshold( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LoggerJava {
            get {
                return ResourceManager.GetString("LoggerJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using TechTalk.SpecFlow;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests.BusinessTests.Steps
        ///{
        ///    [Binding]
        ///    public class LoginSteps : BaseSteps
        ///    {
        ///        public LoginSteps(ContextController contextController) : base(contextController)
        ///        {
        ///        }
        ///
        ///        [Given(@&quot;I am logged in with valid user credentials&quot;)]
        ///        public void GivenIAmLoggedInWithValidUserCredentials()
        ///        {
        ///            ScenarioContext.Current.Pending();
        ///        }
        ///
        ///        [Then(@&quot;I should be redirec [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LoginStepsCSharp {
            get {
                return ResourceManager.GetString("LoginStepsCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package BusinessTests.Steps;
        ///
        ///import io.cucumber.java.en.Given;
        ///import io.cucumber.java.en.Then;
        ///import io.cucumber.java.en.When;
        ///import Bases.Asserts;
        ///
        ///public class LoginSteps extends BaseSteps {
        ///
        ///    @Given(&quot;I am logged in with valid user credentials&quot;)
        ///    public void i_am_logged_in_with_valid_user_credentials() throws Exception {
        ///       throw new io.cucumber.java.PendingException();
        ///    }
        ///    @Then(&quot;I should be redirected to the Home page&quot;)
        ///    public void i_should_be_redirected_to_the_home [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LoginStepsJava {
            get {
                return ResourceManager.GetString("LoginStepsJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Reqnroll;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests.BusinessTests.Steps
        ///{
        ///    [Binding]
        ///    public class LoginSteps : BaseSteps
        ///    {
        ///        public LoginSteps(ContextController contextController) : base(contextController)
        ///        {
        ///        }
        ///
        ///        [Given(@&quot;I am logged in with valid user credentials&quot;)]
        ///        public void GivenIAmLoggedInWithValidUserCredentials()
        ///        {
        ///            ScenarioContext.Current.Pending();
        ///        }
        ///
        ///        [Then(@&quot;I should be redirected to th [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LoginStepsReqnRollCSharp {
            get {
                return ResourceManager.GetString("LoginStepsReqnRollCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;
        ///         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
        ///         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
        ///	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
        ///
        ///    &lt;groupId&gt;dk.expressium.java&lt;/groupId&gt;
        ///	&lt;artifactId&gt;ExpressiumCoffeeshopTests&lt;/artifactId&gt;
        ///	&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
        ///
        ///	&lt;build&gt;
        ///		&lt;plugins&gt;
        ///			&lt;plugin&gt;
        ///				&lt;groupId&gt;org.apache.maven.plugins&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PomJava {
            get {
                return ResourceManager.GetString("PomJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;
        ///
        ///  &lt;PropertyGroup&gt;
        ///    &lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt;
        ///  &lt;/PropertyGroup&gt;
        ///
        ///  &lt;ItemGroup&gt;
        ///    &lt;PackageReference Include=&quot;DotNetSeleniumExtras.PageObjects.Core&quot; Version=&quot;4.14.1&quot; /&gt;
        ///    &lt;PackageReference Include=&quot;DotNetSeleniumExtras.WaitHelpers&quot; Version=&quot;3.11.0&quot; /&gt;
        ///    &lt;PackageReference Include=&quot;log4net&quot; Version=&quot;2.0.17&quot; /&gt;
        ///    &lt;PackageReference Include=&quot;RestSharp&quot; Version=&quot;111.2.0&quot; /&gt;
        ///    &lt;PackageReference Include=&quot;Selenium.Support&quot; Version=&quot;4.21.0&quot; /&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProjectFileApiCSharp {
            get {
                return ResourceManager.GetString("ProjectFileApiCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;
        ///
        ///	&lt;PropertyGroup&gt;
        ///		&lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt;
        ///	&lt;/PropertyGroup&gt;
        ///
        ///	&lt;ItemGroup&gt;
        ///		&lt;PackageReference Include=&quot;Microsoft.Extensions.Configuration&quot; Version=&quot;8.0.0&quot; /&gt;
        ///		&lt;PackageReference Include=&quot;Microsoft.Extensions.Configuration.Binder&quot; Version=&quot;8.0.1&quot; /&gt;
        ///		&lt;PackageReference Include=&quot;Microsoft.Extensions.Configuration.Json&quot; Version=&quot;8.0.0&quot; /&gt;
        ///		&lt;PackageReference Include=&quot;Microsoft.NET.Test.Sdk&quot; Version=&quot;17.10.0&quot; /&gt;
        ///		&lt;PackageReference Include=&quot;NUnit&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProjectFileApiTestsCSharp {
            get {
                return ResourceManager.GetString("ProjectFileApiTestsCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;
        ///
        ///	&lt;PropertyGroup&gt;
        ///		&lt;TargetFramework&gt;net6.0&lt;/TargetFramework&gt;
        ///	&lt;/PropertyGroup&gt;
        ///
        ///	&lt;ItemGroup&gt;
        ///		&lt;PackageReference Include=&quot;Microsoft.Extensions.Configuration&quot; Version=&quot;8.0.0&quot; /&gt;
        ///		&lt;PackageReference Include=&quot;Microsoft.Extensions.Configuration.Binder&quot; Version=&quot;8.0.1&quot; /&gt;
        ///		&lt;PackageReference Include=&quot;Microsoft.Extensions.Configuration.Json&quot; Version=&quot;8.0.0&quot; /&gt;
        ///		&lt;PackageReference Include=&quot;Microsoft.NET.Test.Sdk&quot; Version=&quot;17.10.0&quot; /&gt;
        ///		&lt;PackageReference Include=&quot;NUnit&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProjectFileApiTestsReqnRollCSharp {
            get {
                return ResourceManager.GetString("ProjectFileApiTestsReqnRollCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///
        ///namespace CompanyName.ProjectName.Web.API
        ///{
        ///    public class Randomizer
        ///    {
        ///        private static readonly Random random = new Random();
        ///
        ///        public static string GetRandomString(int length)
        ///        {
        ///            const string chars = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;;
        ///            return new string(Enumerable.Repeat(chars, length).Select(s =&gt; s[random.Next(s.Length)]).ToArray());
        ///        }
        ///
        ///        public static int GetRan [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RandomizerCSharp {
            get {
                return ResourceManager.GetString("RandomizerCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to echo Runnning Regression Test...
        ///
        ///set PROFILE=Development
        ///
        ///rmdir /q /s .\CompanyName.ProjectName.Web.API.Tests\bin\Debug\net6.0\TestResults
        ///
        ///dotnet nuget
        ///dotnet build
        ///
        ///dotnet test .\CompanyName.ProjectName.Web.API.Tests\CompanyName.ProjectName.Web.API.Tests.csproj --filter TestCategory=&quot;UITests&quot;
        ///dotnet test .\CompanyName.ProjectName.Web.API.Tests\CompanyName.ProjectName.Web.API.Tests.csproj --filter TestCategory=&quot;BusinessTests&quot;.
        /// </summary>
        internal static string RegressionTestCSharp {
            get {
                return ResourceManager.GetString("RegressionTestCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;!DOCTYPE suite SYSTEM &quot;http://testng.org/testng-1.0.dtd&quot;&gt;
        ///&lt;suite name=&quot;RegressionTests&quot; configfailurepolicy=&quot;continue&quot;&gt;
        ///    &lt;suite-files&gt;
        ///        &lt;suite-file path=&quot;UITests.xml&quot;/&gt;
        ///        &lt;suite-file path=&quot;BusinessTests.xml&quot;/&gt;
        ///    &lt;/suite-files&gt;
        ///&lt;/suite&gt;.
        /// </summary>
        internal static string RegressionTestsJava {
            get {
                return ResourceManager.GetString("RegressionTestsJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package Bases;
        ///
        ///import java.awt.AWTException;
        ///import java.awt.Dimension;
        ///import java.awt.GraphicsConfiguration;
        ///import java.awt.GraphicsEnvironment;
        ///import java.awt.Rectangle;
        ///import java.awt.Toolkit;
        ///import java.io.File;
        ///import java.io.IOException;
        ///
        ///import org.monte.media.Format;
        ///import org.monte.media.FormatKeys.MediaType;
        ///import org.monte.media.Registry;
        ///import org.monte.media.math.Rational;
        ///import org.monte.screenrecorder.ScreenRecorder;
        ///
        ///import static org.monte.media.AudioFormatKeys.*; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScreenRecorderUtilityJava {
            get {
                return ResourceManager.GetString("ScreenRecorderUtilityJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Microsoft Visual Studio Solution File, Format Version 12.00
        ///# Visual Studio Version 17
        ///VisualStudioVersion = 17.5.33414.496
        ///MinimumVisualStudioVersion = 10.0.40219.1
        ///Project(&quot;{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}&quot;) = &quot;CompanyName.ProjectName.Web.API&quot;, &quot;CompanyName.ProjectName.Web.API\CompanyName.ProjectName.Web.API.csproj&quot;, &quot;{C3C90606-9E62-457B-990D-550CADD0AFD9}&quot;
        ///EndProject
        ///Project(&quot;{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}&quot;) = &quot;CompanyName.ProjectName.Web.API.Tests&quot;, &quot;CompanyName.ProjectName.Web.API [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SolutionFileCSharp {
            get {
                return ResourceManager.GetString("SolutionFileCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package BusinessTests.TestRunners;
        ///
        ///import io.cucumber.testng.AbstractTestNGCucumberTests;
        ///import io.cucumber.testng.CucumberOptions;
        ///import org.testng.annotations.DataProvider;
        ///
        ///@CucumberOptions(
        ///        features = {&quot;src/test/java/BusinessTests/Features&quot;},
        ///        glue = {&quot;BusinessTests/Steps&quot;},
        ///        tags = &quot;@BusinessTests&quot;
        ///)
        ///public class BusinessTests extends AbstractTestNGCucumberTests {
        ///
        ///    @Override
        ///    @DataProvider(parallel = false)
        ///    public Object[][] scenarios() {
        ///        retu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestRunnerJava {
            get {
                return ResourceManager.GetString("TestRunnerJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;!DOCTYPE suite SYSTEM &quot;http://testng.org/testng-1.0.dtd&quot;&gt;
        ///&lt;suite name=&quot;UiTests&quot; configfailurepolicy=&quot;continue&quot;&gt;
        ///    &lt;test name=&quot;UITests&quot;&gt;
        ///        &lt;packages&gt;
        ///            &lt;package name=&quot;UITests&quot; /&gt;
        ///        &lt;/packages&gt;
        ///    &lt;/test&gt;
        ///&lt;/suite&gt;.
        /// </summary>
        internal static string TestRunnerUITestsJava {
            get {
                return ResourceManager.GetString("TestRunnerUITestsJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using OpenQA.Selenium;
        ///using OpenQA.Selenium.Chrome;
        ///using OpenQA.Selenium.Edge;
        ///using OpenQA.Selenium.Firefox;
        ///using System;
        ///
        ///namespace CompanyName.ProjectName.Web.API.Tests
        ///{
        ///    public class WebDriverFactory
        ///    {
        ///        public enum BrowserTypes
        ///        {
        ///            Chrome,
        ///            Firefox,
        ///            Edge
        ///        }
        ///
        ///        public static IWebDriver Initialize(string browserType, string url = null, bool maximized = true, bool headless = false, bool windowSize = false, int windowWi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WebDriverFactoryCSharp {
            get {
                return ResourceManager.GetString("WebDriverFactoryCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package Bases;
        ///
        ///import org.openqa.selenium.WebDriver;
        ///import org.openqa.selenium.chrome.ChromeDriver;
        ///import org.openqa.selenium.chrome.ChromeOptions;
        ///import org.openqa.selenium.edge.EdgeDriver;
        ///import org.openqa.selenium.edge.EdgeOptions;
        ///import org.openqa.selenium.firefox.FirefoxDriver;
        ///import org.openqa.selenium.firefox.FirefoxOptions;
        ///import org.openqa.selenium.firefox.FirefoxProfile;
        ///
        ///public class WebDrivers {
        ///    public enum BrowserTypes {
        ///        Chrome,
        ///        Edge,
        ///        Firefox
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WebDriversJava {
            get {
                return ResourceManager.GetString("WebDriversJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using OpenQA.Selenium;
        ///using OpenQA.Selenium.Interactions;
        ///using OpenQA.Selenium.Support.UI;
        ///using SeleniumExtras.WaitHelpers;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Threading;
        ///
        ///namespace CompanyName.ProjectName.Web.API
        ///{
        ///    public static class WebElements
        ///    {
        ///        public static int ElementTimeOut { get; set; }
        ///
        ///        public static bool Highlight { get; set; }
        ///        public static int HighlightTimeOut { get; set; }
        ///        public static int  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WebElementsCSharp {
            get {
                return ResourceManager.GetString("WebElementsCSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package Bases;
        ///
        ///import org.apache.log4j.Logger;
        ///import org.openqa.selenium.By;
        ///import org.openqa.selenium.JavascriptExecutor;
        ///import org.openqa.selenium.WebDriver;
        ///import org.openqa.selenium.WebElement;
        ///import org.openqa.selenium.interactions.Actions;
        ///import org.openqa.selenium.support.ui.ExpectedConditions;
        ///import org.openqa.selenium.support.ui.Select;
        ///import org.openqa.selenium.support.ui.WebDriverWait;
        ///
        ///import java.time.Duration;
        ///import java.util.List;
        ///
        ///public class WebElements {
        ///    priv [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WebElementsJava {
            get {
                return ResourceManager.GetString("WebElementsJava", resourceCulture);
            }
        }
    }
}
