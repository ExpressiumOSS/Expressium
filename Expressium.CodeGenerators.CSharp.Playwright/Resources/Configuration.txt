using Microsoft.Extensions.Configuration;
using System;
using System.IO;

namespace $Company$.$Project$.Web.API.Tests
{
    public enum Folders
    {
        Loggings,
        Screenshots,
        Videos
    }

    public class Configuration
    {
        public enum Profiles
        {
            Development,
            Test,
            PreProduction,
            Production
        }

        public string Company { get; set; }
        public string Project { get; set; }
        public string Environment { get; set; }
        public bool Loggings { get; set; }
        public string LoggingsPath { get { return Path.Combine(Directory.GetCurrentDirectory(), Folders.Loggings.ToString()); } }
        public bool Screenshots { get; set; }
        public string ScreenshotsPath { get { return Path.Combine(Directory.GetCurrentDirectory(), Folders.Screenshots.ToString()); } }
        public bool Videos { get; set; }
        public string VideosPath { get { return Path.Combine(Directory.GetCurrentDirectory(), Folders.Videos.ToString()); } }
        public string Url { get; set; }
        public string Username { get; set; }
        public string Password { get; set; }
        public string BrowserType { get; set; }
        public bool Maximize { get; set; }
        public bool Headless { get; set; }
        public bool WindowSize { get; set; }
        public int WindowWidth { get; set; }
        public int WindowHeight { get; set; }
        public int BrowserTimeOut { get; set; }
        public int PageTimeOut { get; set; }
        public bool Highlight { get; set; }
        public int HighlightTimeOut { get; set; }

        public static Configuration GetCurrentConfiguation()
        {
            var profile = System.Environment.GetEnvironmentVariable("PROFILE");

            if (profile == null || !Enum.IsDefined(typeof(Profiles), profile))
                profile = Profiles.Development.ToString();

            var configuration = new ConfigurationBuilder()
               .SetBasePath(Directory.GetCurrentDirectory())
               .AddJsonFile("configuration.json").Build()
               .GetSection("Profiles").GetSection(profile).Get<Configuration>();

            if (configuration == null)
                throw new ApplicationException($"Configuration profile '{profile}' is unknown...");

            if (configuration.Loggings && !Directory.Exists(configuration.LoggingsPath))
                Directory.CreateDirectory(configuration.LoggingsPath);

            if (configuration.Screenshots && !Directory.Exists(configuration.ScreenshotsPath))
                Directory.CreateDirectory(configuration.ScreenshotsPath);

            if (configuration.Videos && !Directory.Exists(configuration.VideosPath))
                Directory.CreateDirectory(configuration.VideosPath);

            // Initialize Locators Settings...
            Locators.Highlight = configuration.Highlight;
            Locators.HighlightTimeOut = configuration.HighlightTimeOut;

            return configuration;
        }
    }
}